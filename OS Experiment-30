#include <stdio.h>
#include <pthread.h>

void* threadFunction(void* arg) {
    int threadId = *(int*)arg;
    printf("Hello from thread %d\n", threadId);
    pthread_exit(NULL);
}
int main() {
    pthread_t thread;
    int threadId = 1;
    pthread_create(&thread, NULL, threadFunction, &threadId);
    pthread_join(thread, NULL);
    printf("Main thread exiting\n");
    return 0;
}

#include <stdio.h>
#include <pthread.h>

void* threadFunction(void* arg) {
    int threadId = *(int*)arg;
    printf("Hello from thread %d\n", threadId);
    pthread_exit(NULL);
}
int main() {
    pthread_t thread;
    int threadId = 1;
    pthread_create(&thread, NULL, threadFunction, &threadId);
    pthread_join(thread, NULL);
    printf("Main thread exiting\n");
    return 0;
}

#include <stdio.h>
#include <pthread.h>
void* threadFunction(void* arg) {
    printf("Thread executing\n");
    pthread_exit(NULL);
}
int main() {
    pthread_t thread1, thread2;
    pthread_create(&thread1, NULL, threadFunction, NULL);
    pthread_create(&thread2, NULL, threadFunction, NULL);
    if (pthread_equal(thread1, thread2)) {
        printf("Threads are equal\n");
    } else {
        printf("Threads are not equal\n");
    }
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);
    printf("Main thread exiting\n");
    return 0;
}

#include <stdio.h>
#include <pthread.h>

void* threadFunction(void* arg) {
    printf("Thread executing\n");
    pthread_exit(NULL);
}
int main() {
    pthread_t thread;
    pthread_create(&thread, NULL, threadFunction, NULL);
    pthread_exit(NULL);
    printf("This line will not be executed\n");
    return 0;
}
